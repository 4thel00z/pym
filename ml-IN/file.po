# Language ml-IN translations for Python_for_you_and_me package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: Python_for_you_and_me VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-09-27T11:50:13\n"
"PO-Revision-Date: 2009-07-23 09:51+0530\n"
"Last-Translator: JAGANADH G <jaganadhg@au-kbc.org>\n"
"Language-Team: none\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#, no-c-format
msgid "File handling"
msgstr "ഫയല്‍ കൈകാര്യം ചെയ്യല്‍"

#. Tag: para
#, no-c-format
msgid ""
"A file is some information or data which stays in the computer storage "
"devices. You already know about different kinds of file , like your music "
"files, video files, text files. Python gives you easy ways to manipulate "
"these files. Generally we divide files in two categories, text file and "
"binary file. Text files are simple text where as the binary files contain "
"binary data which is only readable by computer."
msgstr ""
"കന്പ്യൂട്ടറില്‍  സൂക്ഷിച്ചിട്ടുള്ള  വിവരങ്ങളെയോ അറിവുകളെയോ   ആണ് ഫയല്‍ എന്നു പറയുന്നത്. മ്യൂസിക് ഫയല്‍ ,"
"വീഡിയോ ഫയല്‍ , ടെക്സ്റ്റ് ഫയല്‍  തുടങ്ങി വിവിധതരം  ഫയലുകളെക്കുറിച്ച്  താങ്കള്‍ക്ക് അറിയാമല്ലോ?. ഈ "
"ഫയലുകളെയെല്ലാം കൈകാര്യം  ചെയ്യാന്‍ പൈത്തണ്‍ താങ്കള്‍ക്ക് എളുപ്പവഴി കാണിച്ചു തരുന്നു. പൊതുവായി "
"ഫയലുകളെ ,ടെക്സ്റ്റ് ഫയലുകളെന്നും ബൈനറിഫയലുകളെന്നും  രണ്ടായി തിരിക്കാം. ലളിതമായ ടെക്സ്റ്റ് "
"വിവരങ്ങള്‍ അടങ്ങിയതാണ് ടെക്സ്റ്റ് ഫയല്‍ എന്നാല്‍ കന്പ്യൂട്ടറിനുമാത്രം വായിക്കുവാന്‍ കഴിയുന്ന ബൈനറി "
"വിവരങ്ങള്‍  അടങ്ങിയ ഫയലുകളാണ് ബൈനറി ഫയലുകള്‍ ."

#. Tag: title
#, no-c-format
msgid "File opening"
msgstr "ഫയല്‍ തുറക്കല്‍ "

#. Tag: para
#, no-c-format
msgid ""
"To open a file we use <emphasis>open()</emphasis> function. It requires two "
"arguments, first the file path or file name, second which mode it should "
"open. Modes are like"
msgstr ""
"ഒരു ഫയല്‍ തുറക്കുന്നതിനായി നമ്മള്‍  <emphasis>open()</emphasis> എന്ന ഫംങ്ഷന്‍  ഉപയോഗിക്കുന്നു. "
"ഇതിനായി രണ്ടു ആര്‍ഗുമെന്‍റുകള്‍  ആവശ്യമുണ്ട്,ഒന്ന് ഫയലിന്‍റെ  പേരും  രണ്ട്ഏത് രീതിയിലാണ് അത് "
"തുറക്കേണ്ടതെന്നും.ആ രീതികള്‍  ഇങ്ങനെയാകാം"

#. Tag: member
#, fuzzy, no-c-format
msgid ""
"&#34;r&#34; -&#62; open read only, you can read the file but can not edit / "
"delete anything inside"
msgstr ""
"\"r\" ->വായിക്കാന്‍ മാത്രമായി തുറക്കുക, നിങ്ങള്‍ക്ക് പ്രോഗ്രാമിലൂടെ ഫയല്‍ വായിക്കാന്‍ കഴിയും "
"എന്നാല്‍ തിരുത്തുവാനോ നീക്കം ചെയ്യുവാനോ കഴിയില്ല."

#. Tag: member
#, fuzzy, no-c-format
msgid ""
"&#34;w&#34; -&#62; open with write power, means if the file exists then "
"delete all content and open it to write"
msgstr ""
"\"w\" ->എഴുതുന്നതിനായി തുറക്കുക,ഇത് അര്‍ത്ഥമാക്കുന്നത് ഫയല്‍ നിലവിലുണ്ടെങ്കില്‍  അതിലെ മുഴുവന്‍ "
"വിവരവും നീക്കം ചെയ്തതിനു ശേഷം  പുതിയ വിവരങ്ങള്‍ എഴുതുന്നതിനായി തുറക്കുക"

#. Tag: member
#, fuzzy, no-c-format
msgid "&#34;a&#34; -&#62; open in append mode"
msgstr "\"a\" -> അപ്പെന്‍റ്  രീതിയില്‍ തുറക്കുക (കൂട്ടിച്ചേര്‍ക്കുന്നതിനായി തുറക്കുക)"

#. Tag: para
#, no-c-format
msgid ""
"The default mode is read only, ie if you do not provide any mode it will "
"open the file as read only. Let us open a file"
msgstr ""
"വായിക്കുവാനായി തുറക്കുക എന്നതാണ്    സഹജമായ രീതി, താങ്കള്‍‌  മറ്റൊരു രീതിയും നല്‍കിയാല്ല "
"എങ്കില്‍  ഫയല്‍  വായിക്കുവാന്‍ മാത്രമായി തുറക്കുന്നതാണ്.വരൂ നമുക്കൊരു ഫയല്‍ തുറന്നു നോക്കാം "

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"&#62;&#62;&#62; f = open(&#34;love.txt&#34;)\n"
"&#62;&#62;&#62; f\n"
"&#60;open file &#39;love.txt&#39;, mode &#39;r&#39; at 0xb7f2d968&#62;\n"
"\n"
msgstr ""

#. Tag: title
#, fuzzy, no-c-format
msgid "Closing a file"
msgstr "ഫയല്‍ വായിക്കുവാന്‍"

#. Tag: para
#, no-c-format
msgid ""
"After opening a file one should always close the opened file. We use method "
"<emphasis>close()</emphasis> for this."
msgstr ""

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"&#62;&#62;&#62; f = open(&#34;love.txt&#34;)\n"
"&#62;&#62;&#62; f\n"
"&#60;open file &#39;love.txt&#39;, mode &#39;r&#39; at 0xb7f2d968&#62;\n"
"&#62;&#62;&#62; f.close()\n"
"\n"
"\n"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Important"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Always make sure you *explicitly* close each open file, once its job is done "
"and you have no reason to keep it open. Because"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"There is an upper limit to the number of files a program can open. If you "
"exceed that limit, there is no reliable way of recovery, so the program "
"could crash."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Each open file consumes some main-memory for the data-structures associated "
"with it, like file descriptor/handle or file locks etc. So you could "
"essentially end-up wasting lots of memory if you have more files open that "
"are not useful or usable."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Open files always stand a chance of corruption and data loss."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Reading a file"
msgstr "ഫയല്‍ വായിക്കുവാന്‍"

#. Tag: para
#, no-c-format
msgid ""
"To read the whole file at once use the <emphasis>read()</emphasis> method."
msgstr ""
"ഒരേ സമയം മുഴുവന്‍ ഫയലും വായിക്കുന്നതിനായി <emphasis>read()</emphasis> എന്ന രീതി "
"ഉപയോഗിക്കുക."

#. Tag: screen
#, fuzzy, no-c-format
msgid ""
"\n"
"\n"
"&#62;&#62;&#62; f = open(&#34;sample.txt&#34;)\n"
"&#62;&#62;&#62; f.read()\n"
"&#39;I love Python\n"
"Pradeepto loves KDE\n"
"Sankarshan loves Openoffice\n"
"&#39;\n"
"\n"
msgstr ""
"<![CDATA[\n"
">>> f = open(\"sample.txt\")\n"
">>> f.read()\n"
"'I love Python\\nPradeepto loves KDE\\nSankarshan loves Openoffice\\n'\n"
"]]>"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"If you call <emphasis>read()</emphasis> again it will return empty string as "
"it already read the whole file. readline() can help you to read one line "
"each time from the file."
msgstr ""
" താങ്കള്‍  read() ഫംങ്ഷനെ  വീണ്ടും വിളിക്കുന്പോള്‍ മുഴുവന്‍ ഫയലിനെയും നേരത്തെ വായിച്ചതിനാല്‍ "
"ഒന്നും തന്നെ കാണാന്‍ കഴിയില്ല. readline() എന്ന ഫംങ്ഷന്‍ ഒരു സമയത്ത്  ഒരു വരി എന്ന നിലയ്ക്ക്  "
"ഫയല്‍ വായിക്കുവാന്‍  താങ്കളെ സഹായിക്കുന്നു."

#. Tag: screen
#, fuzzy, no-c-format
msgid ""
"\n"
"\n"
"&#62;&#62;&#62; f = open(&#34;sample.txt&#34;)\n"
"&#62;&#62;&#62; f.readline()\n"
"&#39;I love Python\n"
"&#39;\n"
"&#62;&#62;&#62; f.readline()\n"
"&#39;Pradeepto loves KDE\n"
"&#39;\n"
"\n"
msgstr ""
"<![CDATA[\n"
">>> f = open(\"sample.txt\")\n"
">>> f.readline()\n"
"'I love Python\\n'\n"
">>> f.readline()\n"
"'Pradeepto loves KDE\\n'\n"
"]]>"

#. Tag: para
#, no-c-format
msgid ""
"To read all the all the lines in a list we use <emphasis>readlines()</"
"emphasis> method."
msgstr ""
"ഒരു ലിസ്റ്റിലെ  എല്ലാ വരികളും വായിക്കുന്നതിനായി<emphasis>readlines()</emphasis> എന്ന "
"രീതി  ഉപയോഗിക്കാം."

#. Tag: screen
#, fuzzy, no-c-format
msgid ""
"\n"
"\n"
"&#62;&#62;&#62; f = open(&#34;sample.txt&#34;)\n"
"&#62;&#62;&#62; f.readlines()\n"
"[&#39;I love Python\n"
"&#39;, &#39;Pradeepto loves KDE\n"
"&#39;, &#39;Sankarshan loves Openoffice\n"
"&#39;]\n"
"\n"
msgstr ""
"<![CDATA[\n"
">>> f = open(\"sample.txt\")\n"
">>> f.readlines()\n"
"['I love Python\\n', 'Pradeepto loves KDE\\n', 'Sankarshan loves Openoffice"
"\\n']\n"
"]]>"

#. Tag: para
#, no-c-format
msgid "You can even loop through the lines in a file object."
msgstr "ഫയല്‍ ഓബ്ജക്ടിലെ വരികളില്‍  താങ്കള്‍ക്ക് ലൂപ്പ്  ഉപയോഗിക്കാവുന്നതാണ്."

#. Tag: screen
#, fuzzy, no-c-format
msgid ""
"\n"
"\n"
"&#62;&#62;&#62; f = open(&#34;sample.txt&#34;)\n"
"&#62;&#62;&#62; for x in f:\n"
"...     print x,\n"
"...\n"
"I love Python\n"
"Pradeepto loves KDE\n"
"Sankarshan loves Openoffice\n"
"\n"
msgstr ""
"<![CDATA[\n"
">>> f = open(\"sample.txt\")\n"
">>> for x in f:\n"
"...     print x,\n"
"...\n"
"I love Python\n"
"Pradeepto loves KDE\n"
"Sankarshan loves Openoffice\n"
"]]>"

#. Tag: para
#, no-c-format
msgid ""
"Let us write a program which will take the file name as the input from the "
"user and show the content of the file in the console."
msgstr ""
"അടുത്തതായി  നമുക്ക്  യൂസറില്‍ നിന്നും  ഫയലിന്‍റെ പേര്  സ്വീകരിക്കുന്പോള്‍  ഫയലിന്‍റെ  ഉള്ളടക്കം  "
"കണ്‍സോളില്‍ അച്ചടിക്കുന്ന (പ്രിന്റ്)  ഒരു പ്രോഗ്രാം  എഴുതാം."

#. Tag: screen
#, fuzzy, no-c-format
msgid ""
"\n"
"\n"
"#!/usr/bin/env python\n"
"name = raw_input(&#34;Enter the file name: &#34;)\n"
"f = open(name)\n"
"print f.read()\n"
"f.close()\n"
"\n"
msgstr ""
"<![CDATA[\n"
"#!/usr/bin/env python\n"
"name = raw_input(\"Enter the file name: \")\n"
"f = open(name)\n"
"print f.read()\n"
"f.close()\n"
"]]>"

#. Tag: para
#, no-c-format
msgid ""
"In the last line you can see that we closed the file object with the help of "
"close() method."
msgstr ""
"അവസാനത്തെ വരിയില്‍ ഫയല്‍ ഓബ്ജക്ടിനെ close()  എന്ന ഫങ്ഷന്‍ ഉപയോഗിച്ച് അടച്ചിരിക്കുന്നതായി  "
"താങ്കള്‍ക്ക് കാണാന്‍ കഴിയും."

#. Tag: para
#, no-c-format
msgid "The output"
msgstr "ഔട്ട്പുട്ട്"

#. Tag: screen
#, fuzzy, no-c-format
msgid ""
"\n"
"\n"
"[kd@kdlappy book]$ ./showfile.py\n"
"Enter the filename: sample.txt\n"
"I love Python\n"
"Pradeepto loves KDE\n"
"Sankarshan loves Openoffice\n"
"\n"
msgstr ""
"<![CDATA[\n"
"[kd@kdlappy book]$ ./showfile.py\n"
"Enter the filename: sample.txt\n"
"I love Python\n"
"Pradeepto loves KDE\n"
"Sankarshan loves Openoffice\n"
"]]>"

#. Tag: title
#, no-c-format
msgid "Writing in a file"
msgstr "ഫയലിലേക്ക് എഴുതുന്നത്"

#. Tag: para
#, no-c-format
msgid ""
"Let us open a file then we will write some random text into it by using the "
"write() method."
msgstr ""
"അടുത്തതായി നമുക്ക് ഒരു ഫയല്‍ തുറക്കാം അതിനുശേഷം write() രീതി ഉപയോഗിച്ച് അല്‍പം റാന്‍ഡം ടെക്സ്റ്റ് "
"അതിലേക്ക് എഴുതാം."

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"&#62;&#62;&#62; f = open(&#34;ircnicks.txt&#34;, &#39;w&#39;)\n"
"&#62;&#62;&#62; f.write(&#39;powerpork\n"
"&#39;)\n"
"&#62;&#62;&#62; f.write(&#39;indrag\n"
"&#39;)\n"
"&#62;&#62;&#62; f.write(&#39;mishti\n"
"&#39;)\n"
"&#62;&#62;&#62; f.write(&#39;sm|CPU&#39;)\n"
"&#62;&#62;&#62; f.close()\n"
"\n"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Now read the file we just created"
msgstr "ഇപ്പോള്‍ നാം നിര്‍മ്മിച്ച പ്രോഗ്രാമിലൂടെ ഫയല്‍ വായിക്കാം."

#. Tag: screen
#, fuzzy, no-c-format
msgid ""
"\n"
"\n"
"&#62;&#62;&#62; f = open(&#39;ircnicks.txt&#39;)\n"
"&#62;&#62;&#62; s = f.read()\n"
"&#62;&#62;&#62; print s\n"
"powerpork\n"
"indrag\n"
"mishti\n"
"sm|CPU\n"
"\n"
msgstr ""
"<![CDATA[\n"
">>> f = open('ircnicks.txt')\n"
">>> s = f.read()\n"
">>> print s\n"
"powerpork\n"
"indrag\n"
"mishti\n"
"sm|CPU\n"
"]]>"

#. Tag: title
#, no-c-format
msgid "copyfile.py"
msgstr "copyfile.py"

#. Tag: para
#, no-c-format
msgid "In this example we will copy a given file to another file."
msgstr "തന്നിരിക്കുന്ന ഫയലിനെ മറ്റൊരു ഫയലിലേക്ക് പകര്‍ത്താന്‍ ഈ ഉദാഹരണം നമ്മെ സഹായിക്കുന്നു."

#. Tag: screen
#, fuzzy, no-c-format
msgid ""
"\n"
"\n"
"#!/usr/bin/env python\n"
"import sys\n"
"if len(sys.argv) &#60; 3:\n"
"    print &#34;Wrong parameter&#34;\n"
"    print &#34;./copyfile.py file1 file2&#34;\n"
"    sys.exit(1)\n"
"f1 = open(sys.argv[1])\n"
"s = f1.read()\n"
"f1.close()\n"
"f2 = open(sys.argv[2], &#39;w&#39;)\n"
"f2.write(s)\n"
"f2.close()\n"
"\n"
msgstr ""
"<![CDATA[\n"
"#!/usr/bin/env python\n"
"import sys\n"
"if len(sys.argv) < 3:\n"
"    print \"Wrong parameter\"\n"
"    print \"./copyfile.py file1 file2\"\n"
"    sys.exit(1)\n"
"f1 = open(sys.argv[1])\n"
"s = f1.read()\n"
"f1.close()\n"
"f2 = open(sys.argv[2], 'w')\n"
"f2.write(s)\n"
"f2.close()\n"
"]]>"

#. Tag: para
#, no-c-format
msgid ""
"You can see we used a new module here <emphasis>sys</emphasis>. "
"<emphasis>sys.argv</emphasis> contains all command line parameters. Remember "
"<emphasis>cp</emphasis> command in shell, after <emphasis>cp</emphasis> we "
"type first the file to be copied and then the new file name."
msgstr ""
"<emphasis>sys</emphasis> എന്ന  ഒരു പുതിയ  മോഡ്യൂള്‍ നാം ഉപയോഗിച്ചിരിക്കുന്നത് താങ്കള്‍ക്ക് "
"കാണാന്‍ കഴിയും.<emphasis>sys.argv</emphasis> ല്‍ എല്ലാ കമാന്‍റ് ലൈന്‍ പരാമീറ്ററുകളും "
"ഉണ്ടായിരിക്കും.  ഷെല്ലിലെ <emphasis>cp</emphasis>  എന്ന കമാന്‍റ്  ഓര്‍ക്കുക.  "
"<emphasis>cp</emphasis> കമാന്‍ഡിന് ശേഷം പകര്‍ത്തേണ്ട ഫയലിന്റെ പേരും പുതിയ ഫയലിന്റെ പേരും "
"നല്‍കണം (ഏത് ഫയലിലേക്കാണോ പകര്‍ ത്തേണ്ടത് ആ ഫയലിന്റെ പേര്). "

#. Tag: para
#, no-c-format
msgid ""
"The first value in <emphasis>sys.argv</emphasis> is the name of the command "
"itself."
msgstr "<emphasis>sys.argv</emphasis> ലെ ആദ്യത്തെ  മൂല്യം  കമാന്‍റിന്‍റെ പേര് തന്നെയാണ്."

#. Tag: screen
#, fuzzy, no-c-format
msgid ""
"\n"
"\n"
"#!/usr/bin/env python\n"
"import sys\n"
"print &#34;First value&#34;, sys.argv[0]\n"
"print &#34;All values&#34;\n"
"for i, x  in enumerate(sys.argv):\n"
"    print i, x\n"
"\n"
msgstr ""
"<![CDATA[\n"
"#!/usr/bin/env python\n"
"import sys\n"
"print \"First value\", sys.argv[0]\n"
"print \"All values\"\n"
"for i, x  in enumerate(sys.argv):\n"
"    print i, x\n"
"]]>"

#. Tag: screen
#, fuzzy, no-c-format
msgid ""
"\n"
"\n"
"[kd@kdlappy book]$ ./argvtest.py Hi there\n"
"First value ./argvtest.py\n"
"All values\n"
"0 ./argvtest.py\n"
"1 Hi\n"
"2 there\n"
"\n"
msgstr ""
"<![CDATA[\n"
"[kd@kdlappy book]$ ./argvtest.py Hi there\n"
"First value ./argvtest.py\n"
"All values\n"
"0 ./argvtest.py\n"
"1 Hi\n"
"2 there\n"
"]]>"

#. Tag: para
#, no-c-format
msgid ""
"Here we used a new function <emphasis>enumerate(iterableobject)</emphasis>, "
"which returns the index number and the value from the iterable object."
msgstr ""
"ഇവിടെ നാം  <emphasis>enumerate(iterableobject)</emphasis> എന്ന  ഒരു പുതിയ "
"ഫംങ്ഷന്‍   ഉപയോഗിച്ചു. ഇത് ഇറ്ററേറ്റ് ചെയ്യാവുന്ന ഓബ്ജക്ടില്‍ നിന്നും  ഇന്‍ഡക്സ് നന്പരും  അതിന്‍റെ "
"മൂല്യവും തരുന്നു."

#. Tag: title
#, no-c-format
msgid "Random seeking in a file"
msgstr "ഫയലിന്‍റെ വിവിധ ഭാഗങ്ങളില്‍  തിരയല്‍"

#. Tag: para
#, no-c-format
msgid ""
"You can also randomly move around inside a file using <emphasis>seek()</"
"emphasis> method. It takes two arguments , offset and whence. To know more "
"about it let us read what python help tells us"
msgstr ""
"<emphasis>seek()</emphasis> എന്ന ഫംങ്ഷന്‍   ഉപയോഗിച്ച്  ഫയലിനുള്ളില്‍ എവിടെയും പോകാന്‍ "
"കഴിയും. ഇതിനായി  offset, whence എന്നീ രണ്ട് ആര്‍ഗുമെന്‍റുകള്‍ ഉണ്ട്."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"seek(...) seek(offset[, whence]) -&#62; None. Move to new file position. "
"Argument offset is a byte count. Optional argument whence defaults to 0 "
"(offset from start of file, offset should be &#62;= 0); other values are 1 "
"(move relative to current position, positive or negative), and 2 (move "
"relative to end of file, usually negative, although many platforms allow "
"seeking beyond the end of a file). If the file is opened in text mode, only "
"offsets returned by tell() are legal. Use of other offsets causes undefined "
"behavior. Note that not all file objects are speakable."
msgstr ""
"seek(...) seek(offset[, whence]) -> None.പുതിയ ഫയല്‍സ്ഥാനത്തേക്ക് മാറുന്നു. offset ന്‍റെ "
"ആര്‍ഗ്യുമെന്‍റ്  എന്നത് ബൈറ്റ് കൌണ്ടാണ്. whence ന്‍റെ ഓപ്ഷണല്‍ ആര്‍ഗ്യുമെന്‍റ് ഡീഫോള്‍ട്ടായി 0 ആയിരിക്കും "
"(ഫയലിന്‍റെ തുടക്കം മുതല്‍ offset >=0 ആയിരിക്കും );മററുളള മൂല്യങ്ങള്‍ 1(ഇപ്പോഴുളള സ്ഥിതിയുമായി "
"ബന്ധപ്പെട്ടാണ് ചലിക്കുക,പോസിററീവോ നെഗററീവോ ആകാം), 2 (ഫയലിന്‍റെ അവസാനവുമായി ബന്ധപ്പെട്ടാണ് "
"ചലിക്കുക,സാധാരണയായി നെഗററീവായിരിക്കും,ഏകദേശം എല്ലാ പ്ളാററ്ഫോമുകളും ഫയല്‍ അവസാനിച്ചശേഷവും "
"മുന്പോട്ടുനീങ്ങാന്‍ അനുവദിക്കാറുണ്ട്).ടെക്സ്ററ് മോഡിലാണ് ഫയല്‍ തുറന്നിരിക്കുന്നതെങ്കില്‍ ,tell() നല്കുന്ന "
"offset കള്‍ മാത്രമേ ഉപയോഗിക്കാന്‍ കഴിയുകയുള്ളൂ, മററുളള  offset കള്‍ നിര്‍വചിക്കപ്പെടാത്ത  "
"സ്വഭാവം കാണിക്കുന്നതിനു കാരണമാവും. എല്ലാ ഫയല്‍ ഒബജക്ററുകളും സീക്ക് ചെയ്യാവുന്നവയല്ല."

#. Tag: para
#, no-c-format
msgid "Let us see one example"
msgstr "താഴെ കൊടുത്തുരിക്കുന്ന ഉദാഹരണം  പരിശോധിക്കാം"

#. Tag: screen
#, fuzzy, no-c-format
msgid ""
"\n"
"\n"
"&#62;&#62;&#62; f = open(&#39;tempfile&#39;, &#39;w&#39;)\n"
"&#62;&#62;&#62; f.write(&#39;0123456789abcdef&#39;)\n"
"&#62;&#62;&#62; f.close()\n"
"&#62;&#62;&#62; f = open(&#39;tempfile&#39;)\n"
"&#62;&#62;&#62; f.tell()    #tell us the offset position\n"
"0L\n"
"&#62;&#62;&#62; f.seek(5) # Goto 5th byte\n"
"&#62;&#62;&#62; f.tell()\n"
"5L\n"
"&#62;&#62;&#62; f.read(1) #Read 1 byte\n"
"&#39;5&#39;\n"
"&#62;&#62;&#62; f.seek(-3, 2) # goto 3rd byte from the end\n"
"&#62;&#62;&#62; f.read() #Read till the end of the file\n"
"&#39;def&#39;\n"
"\n"
msgstr ""
"<![CDATA[\n"
">>> f = open('tempfile', 'w')\n"
">>> f.write('0123456789abcdef')\n"
">>> f.close()\n"
">>> f = open('tempfile')\n"
">>> f.tell()    #tell us the offset position\n"
"0L\n"
">>> f.seek(5) # Goto 5th byte\n"
">>> f.tell()\n"
"5L\n"
">>> f.read(1) #Read 1 byte\n"
"'5'\n"
">>> f.seek(-3, 2) # goto 3rd byte from the end\n"
">>> f.read() #Read till the end of the file\n"
"'def'\n"
"]]>"

#. Tag: title
#, no-c-format
msgid "Count spaces, tabs and new lines in a file"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Let us try to write an application which will count the spaces , tabs, and "
"new lines in any given file."
msgstr ""

#~ msgid ""
#~ "<![CDATA[\n"
#~ ">>> f = open(\"love.txt\")\n"
#~ ">>> f\n"
#~ "<open file 'love.txt', mode 'r' at 0xb7f2d968>\n"
#~ "]]>"
#~ msgstr ""
#~ "<![CDATA[\n"
#~ ">>> f = open(\"love.txt\")\n"
#~ ">>> f\n"
#~ "<open file 'love.txt', mode 'r' at 0xb7f2d968>\n"
#~ "]]>"

#~ msgid ""
#~ "<![CDATA[\n"
#~ ">>> f = open(\"ircnicks.txt\", 'w')\n"
#~ ">>> f.write('powerpork\\n')\n"
#~ ">>> f.write('indrag\\n')\n"
#~ ">>> f.write('mishti\\n')\n"
#~ ">>> f.write('sm|CPU')\n"
#~ ">>> f.close()\n"
#~ "]]>"
#~ msgstr ""
#~ "<![CDATA[\n"
#~ ">>> f = open(\"ircnicks.txt\", 'w')\n"
#~ ">>> f.write('powerpork\\n')\n"
#~ ">>> f.write('indrag\\n')\n"
#~ ">>> f.write('mishti\\n')\n"
#~ ">>> f.write('sm|CPU')\n"
#~ ">>> f.close()\n"
#~ "]]>"
