# Language ml-IN translations for Python_for_you_and_me package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: Python_for_you_and_me VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2008-12-24 15:13+0000\n"
"PO-Revision-Date: 2008-12-24 15:13+0000\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: ifelse.xml:6
#, no-c-format
msgid "If-else , the control flow"
msgstr ""

#. Tag: para
#: ifelse.xml:7
#, no-c-format
msgid ""
"While working on real life of problems we have to make decisions. Decisions "
"like which camera to buy or which cricket bat is better. At the time of "
"writing a computer program we do the same. We make the decisions using if-"
"else statements, we change the flow of control in the program by using them."
msgstr ""

#. Tag: title
#: ifelse.xml:11
#, no-c-format
msgid "If statement"
msgstr ""

#. Tag: para
#: ifelse.xml:12
#, no-c-format
msgid "The syntax looks like"
msgstr ""

#. Tag: screen
#: ifelse.xml:15
#, no-c-format
msgid ""
"<![CDATA[\n"
"if expression:\n"
"    do this\n"
"]]>"
msgstr ""

#. Tag: para
#: ifelse.xml:16
#, no-c-format
msgid ""
"If the value of <emphasis>expression</emphasis> is true (anything other than "
"zero), do the what is written below under indentation. Please remember to "
"give proper indentation, all the lines indented will be evaluated on the "
"True value of the expression. One simple example is to take some number as "
"input and check if the number is less than 100 or not."
msgstr ""

#. Tag: screen
#: ifelse.xml:19
#, no-c-format
msgid ""
"<![CDATA[\n"
"#!/usr/bin/env python\n"
"number = int(raw_input(\"Enter a number: \"))\n"
"if number < 100:\n"
"    print \"The number is less than 100\"\n"
"]]>"
msgstr ""

#. Tag: para
#: ifelse.xml:20
#, no-c-format
msgid "Then we run it"
msgstr ""

#. Tag: screen
#: ifelse.xml:23
#, no-c-format
msgid ""
"<![CDATA[\n"
"[kd@kdlappy book]$ ./number100.py\n"
"Enter a number: 12\n"
"The number is less than 100\n"
"]]>"
msgstr ""

#. Tag: title
#: ifelse.xml:27
#, no-c-format
msgid "Else statement"
msgstr ""

#. Tag: para
#: ifelse.xml:28
#, no-c-format
msgid ""
"Now in the above example we want to print \"Greater than\" if the number is "
"greater than 100. For that we have to use the <emphasis>else</emphasis> "
"statement. This works when the <emphasis>if</emphasis>statement is not "
"fulfilled."
msgstr ""

#. Tag: screen
#: ifelse.xml:31
#, no-c-format
msgid ""
"<![CDATA[\n"
"#!/usr/bin/env python\n"
"number = int(raw_input(\"Enter a number: \"))\n"
"if number < 100:\n"
"    print \"The number is less than 100\"\n"
"else:\n"
"    print \"The number is greater than 100\"\n"
"]]>"
msgstr ""

#. Tag: para
#: ifelse.xml:32
#, no-c-format
msgid "The output"
msgstr ""

#. Tag: screen
#: ifelse.xml:35
#, no-c-format
msgid ""
"<![CDATA[   \n"
"[kd@kdlappy book]$ ./number100.py\n"
"Enter a number: 345\n"
"The number is greater than 100\n"
"]]>"
msgstr ""

#. Tag: para
#: ifelse.xml:36
#, no-c-format
msgid "Another very basic example"
msgstr ""

#. Tag: screen
#: ifelse.xml:39
#, no-c-format
msgid ""
"<![CDATA[\n"
">>> x = int(raw_input(\"Please enter an integer: \"))\n"
">>> if x < 0:\n"
"...      x = 0\n"
"...      print 'Negative changed to zero'\n"
"... elif x == 0:\n"
"...      print 'Zero'\n"
"... elif x == 1:\n"
"...      print 'Single'\n"
"... else:\n"
"...      print 'More'\n"
"]]>"
msgstr ""
