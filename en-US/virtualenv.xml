<?xml version='1.0'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>

<chapter id="pythonforyouandme-Virtualenv">
    <title>Virtualenv</title>
    <para>
        Virtual Python Environment builder or virtualenv is a tool which will help you to install different versions of python modules in a local directory using which you can develop and test your code without requiring to install everything systemwide.
    </para>
    <section id="pythonforyouandme-Virtualenv-install">
        <title>Installation</title>
        <para>
            You can install virtualenv ewither from distro provided package or through pip.
        </para>
<screen><prompt>[user@host]$ </prompt><userinput>sudo yum install python-virtualenv</userinput>
</screen>
        <para>
            Or
        </para>
<screen><prompt>$ </prompt><userinput>sudo pip install virtualenv</userinput>
</screen>
    </section>
    <section id="pythonforyouandme-Virtualenv-usage">
        <title>Usage</title>
        <para>
            We will create a directory call <emphasis>virtual</emphasis> inside which we will have two different virtual environment.
        </para>
        <para>
            The following commands will the create an env called virt1. 
        </para>
<screen>
<prompt>[user@host]$ </prompt><userinput>cd virtual</userinput>
<prompt>[user@host]$ </prompt><userinput>virtualenv virt1</userinput>
New python executable in virt1/bin/python
Installing setuptools............done.
Installing pip...............done.
</screen>
        <para>
            Now we can go inside virt1 directory and then enable virt1 environment.
        </para>
<screen>
<prompt>[user@host]$ </prompt><userinput>source virt1/bin/activate</userinput>
<prompt>(virt1)[user@host]$ </prompt>
</screen>
        <para>
            The firt part of the prompt is now name of the virtual environment, it will help you to understand which environment you are in when you will have many environments.
        </para>
        <para>
            To deactivate the environment use <emphasis>deactivate</emphasis> command.
        </para>
<screen>
<prompt>(virt1)[user@host]$ </prompt><userinput>deactivate</userinput>
<prompt>[user@host]$ </prompt>
</screen>
        <para>
            So, now we will install a python module called redis.
        </para>
<screen>
<prompt>(virt1)[user@host]$ </prompt><userinput>pip install redis</userinput>
Downloading/unpacking redis
  Downloading redis-2.6.2.tar.gz
  Running setup.py egg_info for package redis
    
Installing collected packages: redis
  Running setup.py install for redis
    
Successfully installed redis
Cleaning up...
</screen>
        <para>
            Same way we can install a project called yolk, which can tell us which all modules are installed.
        </para>
<screen>
<prompt>(virt1)[user@host]$ </prompt><userinput>pip install yolk</userinput>
<prompt>(virt1)[user@host]$ </prompt><userinput>yolk -l</userinput>
Python          - 2.7.3        - active development (/usr/lib64/python2.7/lib-dynload)
pip             - 1.1          - active 
redis           - 2.6.2        - active 
setuptools      - 0.6c11       - active 
wsgiref         - 0.1.2        - active development (/usr/lib64/python2.7)
yolk            - 0.4.3        - active
</screen>
        <para>
            Now we will create another virtual environment <emphasis>virt2</emphasis> where we will install same redis module but an old version 2.4
        </para>
<screen>
<prompt>[user@host]$ </prompt><userinput>virtualenv virt2</userinput>
New python executable in virt1/bin/python
Installing setuptools............done.
Installing pip...............done.
<prompt>[user@host]$ </prompt><userinput>source virt2/bin/activate</userinput>
<prompt>(virt2[user@host]$ </prompt>
<prompt>(virt2)[user@host]$ </prompt><userinput>pip install redis==2.4</userinput>
Downloading/unpacking redis
  Downloading redis-2.4.0.tar.gz
  Running setup.py egg_info for package redis
    
Installing collected packages: redis
  Running setup.py install for redis
    
Successfully installed redis
Cleaning up...
<prompt>(virt1)[user@host]$ </prompt><userinput>pip install yolk</userinput>
<prompt>(virt1)[user@host]$ </prompt><userinput>yolk -l</userinput>
Python          - 2.7.3        - active development (/usr/lib64/python2.7/lib-dynload)
pip             - 1.1          - active 
redis           - 2.4.0        - active 
setuptools      - 0.6c11       - active 
wsgiref         - 0.1.2        - active development (/usr/lib64/python2.7)
yolk            - 0.4.3        - active
</screen>
        <para>
            As you can see yolk says that in this envrionment we have redis 2.4 installed. This way you can have many different environments for your all development needs.
        </para>
        </section>

</chapter>