msgid ""
msgstr ""
"Project-Id-Version: python_for_you_and_me\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-09-27T11:50:13\n"
"PO-Revision-Date: \n"
"Last-Translator: LiJiansheng <lijiangsheng1@gmail.com>\n"
"Language-Team: lijiangsheng1@gmail.com <lijiangsheng1@gmail.com>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Poedit-Language: Chinese\n"
"X-Poedit-Country: CHINA\n"

#. Tag: title
#, no-c-format
msgid "Variables and Datatypes"
msgstr "变量和数据类型"

#. Tag: para
#, no-c-format
msgid "Every programming language is having own grammar rules just like the other languages we speak."
msgstr "每一种编程语言都有其自身的语法规则，正如我们日常所说的其它国家、民族的语言。"

#. Tag: title
#, no-c-format
msgid "Keywords and Identifiers"
msgstr "关键字和标识符"

#. Tag: para
#, no-c-format
msgid "Python codes can be divided into identifiers. Identifiers (also referred to as names) are described by the following lexical definitions:"
msgstr "Python代码使用标识符来分离。标识符（通常提供名称）被描述为以下定义："

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"identifier ::= (letter|&#34;_&#34;) (letter | digit | &#34;_&#34;)* \n"
"letter ::= lowercase | uppercase \n"
"lowercase ::= &#34;a&#34;...&#34;z&#34; \n"
"uppercase ::= &#34;A&#34;...&#34;Z&#34; \n"
"digit ::= &#34;0&#34;...&#34;9&#34;\n"
"\n"
msgstr ""

#. Tag: para
#, no-c-format
msgid "This means <emphasis>_abcd</emphasis> is a valid identifier where as <emphasis>1sd</emphasis> is not. The following identifiers are used as reserved words, or keywords of the language, and cannot be used as ordinary identifiers. They must be spelled exactly as written here:"
msgstr "这意味着<emphasis>_abcd</emphasis>是合法的而<emphasis>1sd</emphasis>不是。以下列出的是用于预留字，或者说是语言的关键字，它们是不可用于通常的标识符的。他们是必须按如下拼写："

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"and       del      from      not   while \n"
"as        elif     global    or    with \n"
"assert    else     if        pass  yield \n"
"break     except   import    print \n"
"class     exec     in        raise \n"
"continue  finally  is        return \n"
"def       for      lambda    try\n"
"\n"
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid "In Python we don&#39;t specify what kind of data we are going to put in a variable. So you can directly write abc = 1 and abc will become an integer datatype. If you write abc = 1.0 abc will become of floating type. Here is a small program to add two given numbers"
msgstr "在python中我们不需要特别的为变量指定数据类型。所以你可以直接写abc = 1，这样变量abc就是整型，如果你写出 abc =1.0，那么abc就是一浮点型。以下是一个增加上述给定的数字的简单程序"

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"&#62;&#62;&#62; a = 13 \n"
"&#62;&#62;&#62; b = 23\n"
"&#62;&#62;&#62; a + b \n"
"36\n"
"\n"
msgstr ""

#. Tag: para
#, no-c-format
msgid "From the above example you can understand that to declare a variable in python , what you need is just to type the name and the value. Python can also manipulate strings They can be enclosed in single quotes or double quotes like"
msgstr "通过上面的例子你可能已经理解了在python中如何定义变量，也就是只需要敲入名称和值就可以了。Python可以很精妙的操纵字符串，它们只需要如下用单引号和双引号括起来即可"

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"&#62;&#62;&#62; &#39;India&#39;\n"
"&#39;India&#39; \n"
"&#62;&#62;&#62; &#39;India\\&#39;s best&#39; \n"
"&#34;India&#39;s best&#34; \n"
"&#62;&#62;&#62; &#34;Hello World!&#34; \n"
"&#39;Hello World!&#39;\n"
"\n"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Reading input from the Keyboard"
msgstr "从键盘读取用户输入"

#. Tag: para
#, fuzzy, no-c-format
msgid "Generally the real life python codes do not need to read input from the keyboard. In python we use raw_input function to do input. <emphasis>raw_input(&#34;String to show&#34;)</emphasis> , this will return a string as output. Let us write a program to read a number from the keyboard and check if it is less than 100 or not. Name of the program is testhundred.py"
msgstr "通常情况下，在python的代码中是不需要从键盘读取输入的。当然python还是提供了这个输入函数，那就是raw_input。<emphasis>raw_input(\"String to show\")</emphasis> ,这将返回一字符串用于输出。让我们写一个程序：实现从键盘读入一数字，然后判断其是否小于100.程序的名称是 testhundred.py"

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"#!/usr/bin/env python   \n"
"number = int(raw_input(&#34;Enter an integer: &#34;))\n"
"if number &#60; 100:   \n"
"    print &#34;Your number is smaller than 100&#34;   \n"
"else:   \n"
"    print &#34;Your number is greater than 100&#34; \n"
"\n"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The output"
msgstr "输出"

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"[kd@kdlappy book]$ ./testhundred.py \n"
"Enter an integer: 13 \n"
"Your number is smaller than 100 \n"
"[kd@kdlappy book]$ ./testhundred.py \n"
"Enter an integer: 123 \n"
"Your number is greater than 100\n"
"\n"
msgstr ""

#. Tag: para
#, no-c-format
msgid "In the next program we are going to calculate investments."
msgstr "在接下来的程序我们将计算投资。"

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"#!/usr/bin/env python \n"
"amount = float(raw_input(&#34;Enter amount: &#34;)) \n"
"inrate = float(raw_input(&#34;Enter Interest rate: &#34;)) \n"
"period = int(raw_input(&#34;Enter period: &#34;)) \n"
"value = 0 \n"
"year = 1 \n"
"while year &#60;= period:\n"
"    value = amount + (inrate * amount)\n"
"    print &#34;Year %d Rs. %.2f&#34; %(year, value)\n"
"    amount = value\n"
"    year = year + 1 \n"
"\n"
msgstr ""

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"[kd@kdlappy book]$ ./investment.py\n"
"Enter amount: 10000\n"
"Enter Interest rate: 0.14\n"
"Enter period: 5\n"
"Year 1 Rs. 11400.00\n"
"Year 2 Rs. 12996.00\n"
"Year 3 Rs. 14815.44\n"
"Year 4 Rs. 16889.60\n"
"Year 5 Rs. 19254.15\n"
"\n"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Some Examples"
msgstr "一些例子"

#. Tag: para
#, no-c-format
msgid "Some examples of variables and datatypes:"
msgstr "一些关于变量和数据类型的例子："

#. Tag: title
#, no-c-format
msgid "Average of N numbers"
msgstr "N个数字的平均值"

#. Tag: para
#, no-c-format
msgid "In the next program we will do an average of N numbers."
msgstr "接下来的程序我们将实现计算N个数字的平均值。"

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"#!/usr/bin/env python\n"
"N = 10\n"
"sum = 0\n"
"count = 0\n"
"while count &#60; N:\n"
"    number = float(raw_input(&#34;&#34;))\n"
"    sum = sum + number\n"
"    count = count + 1\n"
"average = float(sum)/N\n"
"print &#34;N = %d , Sum = %f&#34; % (N, sum)\n"
"print &#34;Average = %f&#34; % average\n"
"\n"
msgstr ""

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"[kd@kdlappy book]$ ./averagen.py\n"
"1\n"
"2.3\n"
"4.67\n"
"1.42\n"
"7\n"
"3.67\n"
"4.08\n"
"2.2\n"
"4.25\n"
"8.21\n"
"N = 10 , Sum = 38.800000\n"
"Average = 3.880000\n"
"\n"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Temperature conversion"
msgstr "温度转换"

#. Tag: para
#, no-c-format
msgid "In this program we will convert the given temperature to Celsius from Fahrenheit by using the formula C=(F-32)/1.8"
msgstr "在此程序中我们用公式 C=(F-32)/1.8将华氏温度转换为摄氏温度"

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"#!/usr/bin/env python\n"
"fahrenhite = 0.0\n"
"print &#34;Fahrenheit Celsius&#34;\n"
"while fahrenheit &#60;= 250:\n"
"    celsius = ( fahrenheit - 32.0 ) / 1.8 #Here we calculate the fahrenhite value\n"
"    print &#34;%5.1f %7.2f&#34; % (fahrenheit , celsius)\n"
"    fahrenheit = fahrenheit + 25\n"
"\n"
msgstr ""

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"[kd@kdlappy book]$ ./temperature.py\n"
"Fahrenheit Celsius\n"
"  0.0  -17.78\n"
" 25.0   -3.89\n"
" 50.0   10.00\n"
" 75.0   23.89\n"
"100.0   37.78\n"
"125.0   51.67\n"
"150.0   65.56\n"
"175.0   79.44\n"
"200.0   93.33\n"
"225.0  107.22\n"
"250.0  121.11\n"
"\n"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Multiple assignments in a single line"
msgstr "在单行定义多个变量或赋值"

#. Tag: para
#, no-c-format
msgid "You can even assign values to multiple variables in a single line, like"
msgstr "你可以在单行中实现多个变量并赋值，例如"

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"&#62;&#62;&#62; a , b = 45, 54\n"
"&#62;&#62;&#62; a\n"
"45\n"
"&#62;&#62;&#62; b\n"
"54\n"
"\n"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Using this swapping two numbers becomes very easy"
msgstr "此用于交换两个数字变的非常容易"

#. Tag: screen
#, no-c-format
msgid ""
"\n"
"\n"
"&#62;&#62;&#62; a, b = b , a\n"
"&#62;&#62;&#62; a\n"
"54\n"
"&#62;&#62;&#62; b\n"
"45\n"
"\n"
msgstr ""
