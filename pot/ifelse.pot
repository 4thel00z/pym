# 
# AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: 0\n"
"POT-Creation-Date: 2012-08-13T13:28:38\n"
"PO-Revision-Date: 2012-08-13T13:28:38\n"
"Last-Translator: Automatically generated\n"
"Language-Team: None\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-publican; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#, no-c-format
msgid "If-else , the control flow"
msgstr ""

#. Tag: para
#, no-c-format
msgid "While working on real life of problems we have to make decisions. Decisions like which camera to buy or which cricket bat is better. At the time of writing a computer program we do the same. We make the decisions using if-else statements, we change the flow of control in the program by using them."
msgstr ""

#. Tag: title
#, no-c-format
msgid "If statement"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The syntax looks like"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "if expression:\n"
"    do this\n"
""
msgstr ""

#. Tag: para
#, no-c-format
msgid "If the value of <emphasis>expression</emphasis> is true (anything other than zero), do the what is written below under indentation. Please remember to give proper indentation, all the lines indented will be evaluated on the True value of the expression. One simple example is to take some number as input and check if the number is less than 100 or not."
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "#!/usr/bin/env python\n"
"number = int(raw_input(\"Enter a number: \"))\n"
"if number &lt; 100:\n"
"    print \"The number is less than 100\"\n"
""
msgstr ""

#. Tag: para
#, no-c-format
msgid "Then we run it"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "$ ./number100.py\n"
"Enter a number: 12\n"
"The number is less than 100\n"
""
msgstr ""

#. Tag: title
#, no-c-format
msgid "Else statement"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Now in the above example we want to print \"Greater than\" if the number is greater than 100. For that we have to use the <emphasis>else</emphasis> statement. This works when the <emphasis>if</emphasis>statement is not fulfilled."
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "#!/usr/bin/env python\n"
"number = int(raw_input(\"Enter a number: \"))\n"
"if number &lt; 100:\n"
"    print \"The number is less than 100\"\n"
"else:\n"
"    print \"The number is greater than 100\"\n"
""
msgstr ""

#. Tag: para
#, no-c-format
msgid "The output"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "$ ./number100.py\n"
"Enter a number: 345\n"
"The number is greater than 100\n"
""
msgstr ""

#. Tag: para
#, no-c-format
msgid "Another very basic example"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "&gt;&gt;&gt; x = int(raw_input(\"Please enter an integer: \"))\n"
"&gt;&gt;&gt; if x &lt; 0:\n"
"...      x = 0\n"
"...      print 'Negative changed to zero'\n"
"... elif x == 0:\n"
"...      print 'Zero'\n"
"... elif x == 1:\n"
"...      print 'Single'\n"
"... else:\n"
"...      print 'More'\n"
""
msgstr ""

#. Tag: title
#, no-c-format
msgid "Truth value testing"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The elegant way to test Truth values is like"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "\n"
"if x:\n"
"    pass\n"
"            "
msgstr ""

#. Tag: title
#, no-c-format
msgid "Don't do this"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "\n"
"if x == True:\n"
"    pass\n"
""
msgstr ""

